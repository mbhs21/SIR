package HL7;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

import java.util.logging.Level;
import java.util.logging.Logger;
import library.interfaces.Patient;

import library.interfaces.ServeurHL7;
import library.structure.groupe.messages.Message;
import nf.DatabaseAccessProperties;
import nf.RequetesBDPatient;

/**
 *
 * @author Benhadj
 */
public class ServeurSIR extends javax.swing.JFrame {

    /**
     *
     */
    private Patient patient;

    /**
     *
     */
    private Message message;

    /**
     *
     */
    private ServeurHL7 c;

    /**
     *
     */
    private Connection conn;

    /**
     * Creates new form EcouteClient
     * @param conn
     * @throws java.lang.ClassNotFoundException
     * @throws java.sql.SQLException
     */
    public ServeurSIR(Connection conn) throws ClassNotFoundException, SQLException {
//        String jdbcDriver, dbUrl, username, password;
//        DatabaseAccessProperties dap = new DatabaseAccessProperties("MaBD.properties.txt");
//        jdbcDriver = dap.getJdbcDriver();
//        dbUrl = dap.getDatabaseUrl();
//        username = dap.getUsername();
//        password = dap.getPassword();
//
//        // Load the database driver
//        Class.forName(jdbcDriver);
//
//        // Get a connection to the database
//        this.conn = DriverManager.getConnection(dbUrl, username, password);
        this.conn=conn;
        initComponents();
        
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        
        this.patient = null;
        this.message = null;
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.birthDateP.setVisible(false);
        this.firstNameP.setVisible(false);
        this.lastNameP.setVisible(false);
        this.genderP.setVisible(false);
        this.connexion.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        connexion = new javax.swing.JButton();
        portField = new javax.swing.JTextField();
        deconnexion = new javax.swing.JButton();
        lastNameP = new javax.swing.JLabel();
        firstNameP = new javax.swing.JLabel();
        birthDateP = new javax.swing.JLabel();
        genderP = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 500));

        jPanel1.setBackground(new java.awt.Color(242, 236, 232));
        jPanel1.setMaximumSize(new java.awt.Dimension(500, 500));
        jPanel1.setMinimumSize(new java.awt.Dimension(500, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 500));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255), 3));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Port");

        connexion.setText("Connexion");
        connexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connexionActionPerformed(evt);
            }
        });

        deconnexion.setText("Déconnexion");
        deconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deconnexionActionPerformed(evt);
            }
        });

        lastNameP.setText("jLabel3");

        firstNameP.setText("jLabel3");

        birthDateP.setText("jLabel3");

        genderP.setText("jLabel3");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(deconnexion)
                        .addGap(103, 103, 103)
                        .addComponent(connexion))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lastNameP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(firstNameP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(birthDateP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(genderP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deconnexion)
                    .addComponent(connexion))
                .addGap(34, 34, 34)
                .addComponent(lastNameP)
                .addGap(18, 18, 18)
                .addComponent(firstNameP)
                .addGap(18, 18, 18)
                .addComponent(birthDateP)
                .addGap(18, 18, 18)
                .addComponent(genderP)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("Examen à venir");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 153, 153), null, new java.awt.Color(0, 102, 102)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connexionActionPerformed
        // TODO add your handling code here:
        this.birthDateP.setVisible(true);
        this.firstNameP.setVisible(true);
        this.lastNameP.setVisible(true);
        this.genderP.setVisible(true);

        Integer port = Integer.parseInt(this.portField.getText());
        c = new ServeurHL7();
        getC().connection(port);
        getC().ecoute();
        String messageHL7 = getC().protocole();

        System.out.println("Reçu :" + messageHL7);
        this.patient = getC().getPatient();
        this.message = getC().getMessage();

        this.lastNameP.setText(this.patient.getFamillyName());
        System.out.println("okkkkkk");
        System.out.println("Recuperatn client: "+this.patient.getFirstName());
        String[] firstNameAdd = this.patient.getFirstName().split("/");
        String firstName = firstNameAdd[0];
        String adress = firstNameAdd[1];
        String numFich = firstNameAdd[2];
        this.firstNameP.setText(firstName);
        this.genderP.setText(this.patient.getSex());
        this.birthDateP.setText(this.patient.getBirth().toString());
        System.out.println("convert date: " + this.convertDate(this.patient.getBirth().toString()));
        nf.Patient pat = new nf.Patient(this.patient.getFamillyName(), firstName, adress, this.patient.getSex().substring(0, 1), this.convertDate(this.patient.getBirth().toString()));
 
        try {
            pat=RequetesBDPatient.addPatBD(pat, conn);
        } catch (SQLException ex) {
            Logger.getLogger(ServeurSIR.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String idSIH=this.patient.getID().toString()+"/"+numFich;
        System.out.println("idSIH="+idSIH);
        try {
            RequetesBDPatient.MAJid(idSIH, pat, conn);
        } catch (SQLException ex) {
            Logger.getLogger(ServeurSIR.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_connexionActionPerformed

    /**
     *
     * @param dateToConvert
     * @return
     */
    public String convertDate(String dateToConvert) {
        String newDate;
        String[] date = dateToConvert.split(" ");
        String year = date[5];
        String month = date[1];
        String day = date[2];

        int y = Integer.parseInt(year) - 1900;

        newDate = Integer.toString(y) + "-" + convertMonth(month) + "-" + day;
        return newDate;

    }

    /**
     *
     * @param monthToConvert
     * @return
     */
    public String convertMonth(String monthToConvert) {
        String month = "";
        if (monthToConvert.equals("Jan")) {
            month = "1";
        }
        if (monthToConvert.equals("Feb")) {
            month = "2";
        }
        if (monthToConvert.equals("Mar")) {
            month = "3";
        }
        if (monthToConvert.equals("Apr")) {
            month = "4";
        }
        if (monthToConvert.equals("May")) {
            month = "5";
        }
        if (monthToConvert.equals("Jun")) {
            month = "6";
        }
        if (monthToConvert.equals("Jul")) {
            month = "7";
        }
        if (monthToConvert.equals("Aug")) {
            month = "8";
        }
        if (monthToConvert.equals("Sep")) {
            month = "9";
        }
        if (monthToConvert.equals("Oct")) {
            month = "10";
        }
        if (monthToConvert.equals("Nov")) {
            month = "11";
        }
        if (monthToConvert.equals("Dec")) {
            month = "12";
        }

        return month;
    }


    private void deconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deconnexionActionPerformed
        // TODO add your handling code here:
        this.getC().fermer();

    }//GEN-LAST:event_deconnexionActionPerformed

    /**
     *
     */
    public void closeConnectionHL7() {
        getC().fermer();
    }

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                try {
//                    new ServeurSIR().setVisible(true);
//                } catch (ClassNotFoundException | SQLException ex) {
//                    Logger.getLogger(ServeurSIR.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel birthDateP;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton connexion;
    private javax.swing.JButton deconnexion;
    private javax.swing.JLabel firstNameP;
    private javax.swing.JLabel genderP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lastNameP;
    private javax.swing.JTextField portField;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the c
     */
    public ServeurHL7 getC() {
        return c;
    }
}
